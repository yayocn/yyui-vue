@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  $active-background: darken($background, 10%);
  $active-border: $active-background;

  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
    border-color: $active-border;
  }
  @include hover {
    color: $color;
    background-color: $active-background;
    border-color: $active-border;
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    // Remove the gradient for the pressed/active state
    background-image: none;
    box-shadow: inset 0 0 100px rgba(0,0,0,.125);
  }
  &.disabled,
  &:disabled,
  fieldset[disabled] & {
    &:focus,
    &.focus {
      background-color: $background;
      border-color: $border;
    }
    @include hover {
      background-color: $background;
      border-color: $border;
    }
  }
}

@mixin button-outline-variant($color) {
  color: $color;
  background-image: none;
  background-color: transparent;
  border-color: $color !important;

  &:focus,
  &.focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: #fff;
    background-color: $color;
    border-color: $color;
  }
  @include hover {
    color: #fff;
    background-color: $color;
    border-color: $color;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
    box-shadow: inset 0 0 100px rgba(0,0,0,.125);
  }
  &.disabled,
  &:disabled,
  fieldset[disabled] & {
    &:focus,
    &.focus {
      border-color: lighten($color, 20%);
    }
    @include hover {
      border-color: lighten($color, 20%);
    }
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius: 0) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  @if $enable-rounded {
    @include border-radius($border-radius, $border-radius); // compass
  }
}