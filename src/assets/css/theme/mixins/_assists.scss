// Assists mixins
//
//
//

// Clearfix
//
@mixin clearfix() {
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

// center
//
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// left
//
@mixin float($float) {
  float: $float !important;
}

// triangle
//
@mixin triangle($directions: $directions) {
  %triangle-common {
    display: inline-block;
    width: 5px;
    height: 5px;
    vertical-align: middle;
  }

  @each $dir in $directions {
    .triangle-#{$dir} {
      @extend %triangle-common;
      @if $dir == up {
        border-bottom: $triangle-bottom solid $triangle-color;
        border-right: $triangle-height solid transparent;
        border-left: $triangle-height solid transparent;

        &.disabled,
        &:disabled,
        *.disabled > &,
        *:disabled > & {
          border-bottom-color: lighten($triangle-color, 12%);
        }
      } @else if($dir == right) {
        border-left: $triangle-bottom solid $triangle-color;
        border-top: $triangle-height solid transparent;
        border-bottom: $triangle-height solid transparent;

        &.disabled,
        &:disabled,
        *.disabled > &,
        *:disabled > & {
          border-left-color: #999;
        }
      } @else if($dir == down) {
        border-top: $triangle-bottom solid $triangle-color;
        border-right: $triangle-height solid transparent;
        border-left: $triangle-height solid transparent;

        &.disabled,
        &:disabled,
        *.disabled > &,
        *:disabled > & {
          border-top-color: #999;
        }
      } @else if($dir == left) {
        border-right: $triangle-bottom solid $triangle-color;
        border-top: $triangle-height solid transparent;
        border-bottom: $triangle-height solid transparent;

        &.disabled,
        &:disabled,
        *.disabled > &,
        *:disabled > & {
          border-right-color: #999;
        }
      }
    }
  }
}

//
// Text
//

// Alignment
//
//
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Hidden
//
@mixin text-hidden() {
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

//
// background
//

@mixin bg-variant($parent, $color) {
  @if $color == 'transparent' {
    #{$parent} {
      background: $color;
    }
  } @else {
    #{$parent} {
      background-color: $color;
    }
    a#{$parent} {
      @include hover-focus {
        background-color: darken($color, 10%);
      }
    }
  }
}